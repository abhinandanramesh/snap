-----------
Assumptions
-----------
1. Assume the value of k
2. Ignore regularization function

---------
Algorithm
---------
Input : k, u, ego_graph

Initialize : theta[1:k] and alpha[1:k]

Optimize : C[1:k], theta[1:k] and alpha[1:k]
	repeat till convergence
		generate C[1:k] using eqn(7)
		optimize theta and alpha using eqn(6) and partial derivatives (2 equations)

Evaluate : C[1:k] using C'[1:k] using eqn(15)

----------------
Helper functions
----------------
initialize(k) -> C[1:k], theta[1:k], alpha[1:k]

sigma_prime()
-------------
This is not sigma()
* Abbas

psi()
-----
This is not phi()
Similarity between nodes x and y
Makes use of sigma_prime()
1- sigma_prime() ???

e_function()
--------------------
edge to cirlce scoring function
uses O_k()

O_k()
-----


d_k()
-----
return 1 or -alpha_k

angular_function
----------------
the vector dot product function
multiply psi() and theta

evaluate()
----------
	input = C[1:k], C'[1:k]
	use eqn(15)
	returns a metric

Greek alphabets :-P
-------------------
http://www.wtpanhellenic.com/uploads/2/1/4/1/21418520/3734313.jpeg?446